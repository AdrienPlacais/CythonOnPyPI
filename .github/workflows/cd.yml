name: CD
on:
  workflow_dispatch:
  push:
    tags:
      - v*

jobs:
  build-linux-cp312:
      runs-on: ubuntu-latest
      # container: quay.io/pypa/manylinux2014_x86_64

      steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Python package dependencies
        run: python -m pip install build auditwheel
        # run: /opt/python/cp312-cp312/bin/python -m pip install cython wheel setuptools

      - name: Build binary wheel
        # run: /opt/python/cp312-cp312/bin/python setup.py bdist_wheel
        run: python -m build

      - name: Apply auditwheel for manylinux wheel
        run: auditwheel repair -w dist dist/*.whl

      - name: Remove linux wheel
        run: rm dist/*-linux_x86_64.whl

      - name: Archive dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-linux-3.12
          path: dist

      - name: List files after archive
        run: tree

  build-macos:
      runs-on: macos-latest
      strategy:
        max-parallel: 4
        matrix:
          python-version: [3.12]
      steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }} x64
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Install Python package dependencies
        run: pip install cython wheel setuptools

      - name: Build binary wheel
        run: python setup.py bdist_wheel

      - name: Archive dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-macos-${{ matrix.python-version }}
          path: dist

      - name: List files
        run: tree

  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.12]
    steps:
    - uses: actions/checkout@v2

    - name: Download Build Tools for Visual Studio 2019
      run: Invoke-WebRequest -Uri https://aka.ms/vs/16/release/vs_buildtools.exe -OutFile vs_buildtools.exe

    - name: Run vs_buildtools.exe install
      run: ./vs_buildtools.exe --quiet --wait --norestart --nocache --add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 --add Microsoft.VisualStudio.Component.VC.v141.x86.x64 --add Microsoft.VisualStudio.Component.VC.140 --includeRecommended

    - name: Set up Python ${{ matrix.python-version }} x64
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64

    - name: Install Python package dependencies
      run: pip install cython wheel setuptools

    - name: Build binary wheel
      run: python setup.py bdist_wheel

    - name: Archive dist artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-windows-${{ matrix.python-version }}
        path: dist

  upload:
    name: Upload packages to TestPyPI
    needs: [build-linux-cp312, build-macos, build-windows]

    runs-on: ubuntu-latest

    environment:
      name: release
      url: https://test.pypi.org/p/CythonOnPyPI

    permissions:
      id-token: write

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.12

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .

    - name: Create source dist
      run: python setup.py sdist

    - name: Stage macos 3.12
      uses: actions/download-artifact@v4
      with:
        name: dist-macos-3.12
    - run: mv -v dist-macos-3.12/* dist/

    - name: Stage linux 3.12
      uses: actions/download-artifact@v4
      with:
        name: dist-linux-3.12
    - run: mv -v dist-linux-3.12/* dist/

    - name: Stage windows 3.12
      uses: actions/download-artifact@v4
      with:
        name: dist-windows-3.12
    - run: mv -v dist-windows-3.12/* dist/

    - name: Upload with twine
      run: |
        ls -l dist/*
        pip install twine
        python -m twine upload --repository testpypi dist/* --verbose
